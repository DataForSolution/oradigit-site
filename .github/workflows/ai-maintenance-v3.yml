name: AI Site Maintenance (v3, manual)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write

jobs:
  audit_and_fix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create minimal audit (fast)
        run: |
          cat > audit-summary.json <<'JSON'
          { "when": "$(date -Is)", "notes": "quick run" }
          JSON
          cat audit-summary.json

      - name: Ask Firebase Function for patch
        env:
          FB_FUNCTION_URL: ${{ vars.FB_FUNCTION_URL }}
          FB_AUTHTOKEN: ${{ secrets.FIREBASE_AUTOMATION_TOKEN }}
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const url = process.env.FB_FUNCTION_URL;
          const token = process.env.FB_AUTHTOKEN;
          const audit = JSON.parse(fs.readFileSync('audit-summary.json','utf8'));
          (async () => {
            const r = await fetch(url, {
              method: 'POST',
              headers: { 'Authorization': 'Bearer ' + token, 'Content-Type': 'application/json' },
              body: JSON.stringify({ audit })
            });
            const txt = await r.text();
            let data = {};
            try { data = JSON.parse(txt); } catch { data = { raw: txt }; }
            fs.writeFileSync('fb-response.json', JSON.stringify(data, null, 2));
            if (data.ok && data.patch && data.patch.includes('--- ') && data.patch.includes('+++ ')) {
              fs.writeFileSync('ai.patch', data.patch);
              console.log('Got patch from Firebase function.');
            } else {
              console.log('No valid diff from Firebase function; exiting gracefully.');
              process.exit(0); // not a failure
            }
          })();
          NODE

      - name: Apply patch and commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          BR=ai/maint-${GITHUB_RUN_ID}
          git checkout -b "$BR"
          git apply --whitespace=fix ai.patch || { echo "Patch failed or no patch"; exit 0; }
          git add -A
          git commit -m "AI maintenance: automated fixes" || { echo "Nothing to commit"; exit 0; }
          echo "PR_BRANCH=$BR" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.PR_BRANCH != ''
        uses: peter-evans/create-pull-request@v6
        with:
          branch: ${{ env.PR_BRANCH }}
          title: AI maintenance: automated fixes
          body: Automated PR generated from Firebase function.
          commit-message: AI maintenance: automated fixes
          base: main
